name: Downstream checks

on:
  pull_request:
    types: [ labeled, opened, synchronize, reopened ]

jobs:
  cowsql:
    if: contains(github.event.pull_request.labels.*.name, 'downstream')
    runs-on: ubuntu-22.04
    steps:
      - name: Install apt deps
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq automake libtool gcc make libuv1-dev libsqlite3-dev

      - name: Check out raft
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.number }}/head
          path: raft

      - name: Install raft
        run: |
          cd raft
          autoreconf -i
          ./configure --prefix=/usr --enable-debug --enable-uv --enable-sanitize --enable-backtrace
          sudo make -j$(nproc) install

      - name: Check out cowsql
        uses: actions/checkout@v3
        with:
          repository: cowsql/cowsql
          path: cowsql

      - name: Test and install cowsql
        run: |
          cd cowsql
          autoreconf -i
          ./configure --prefix=/usr --enable-debug --enable-sanitize --enable-backtrace
          sudo make -j$(nproc) check || (cat ./test-suite.log && false)
          sudo make install

      - name: Install Go
        uses: actions/setup-go@v4

      - name: Check out go-cowsql
        uses: actions/checkout@v3
        with:
          repository: cowsql/go-cowsql
          path: go-cowsql

      - name: Test go-cowsql
        env:
          GO_DQLITE_MULTITHREAD: '1'
        run: |
          cd go-cowsql
          go get -tags libsqlite3 -t ./...
          go test -asan -v ./...
          VERBOSE=1 ASAN=-asan ./test/cowsql-demo.sh
          VERBOSE=1 ASAN=-asan ./test/roles.sh
          VERBOSE=1 ASAN=-asan ./test/recover.sh

  dqlite:
    if: contains(github.event.pull_request.labels.*.name, 'downstream')
    runs-on: ubuntu-22.04
    steps:
      - name: Install apt deps
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq automake libtool gcc make libuv1-dev libsqlite3-dev

      - name: Check out raft
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.number }}/head
          path: raft

      - name: Install raft
        run: |
          cd raft
          autoreconf -i
          ./configure --prefix=/usr --enable-debug --enable-uv --enable-sanitize --enable-backtrace
          sudo make -j$(nproc) install

      - name: Check out dqlite
        uses: actions/checkout@v3
        with:
          repository: canonical/dqlite
          ref: v1.16.0
          path: dqlite

      - name: Test and install dqlite
        run: |
          cd dqlite
          autoreconf -i
          ./configure --prefix=/usr --enable-debug --enable-sanitize --enable-backtrace
          sudo make -j$(nproc) check || (cat ./test-suite.log && false)
          sudo make install

      - name: Install Go
        uses: actions/setup-go@v4

      - name: Check out go-dqlite
        uses: actions/checkout@v3
        with:
          repository: canonical/go-dqlite
          path: go-dqlite

      - name: Test go-dqlite
        env:
          GO_DQLITE_MULTITHREAD: '1'
        run: |
          cd go-dqlite
          go get -tags libsqlite3 -t ./...
          go test -asan -v ./...
          VERBOSE=1 ASAN=-asan ./test/dqlite-demo.sh
          VERBOSE=1 ASAN=-asan ./test/roles.sh
          VERBOSE=1 ASAN=-asan ./test/recover.sh

  jepsen:
    if: contains(github.event.pull_request.labels.*.name, 'downstream')
    uses: cowsql/jepsen.cowsql/.github/workflows/test-build-run.yml@main
    with:
      raft-ref: refs/pull/${{ github.event.number }}/head
      workloads: >
        ['append', 'bank', 'set']
      nemeses: >
        ['none', 'partition', 'kill', 'stop', 'disk', 'member',
         'partition,stop', 'partition,kill', 'partition,member',
         'packet,stop', 'pause']
